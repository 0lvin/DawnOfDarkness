
//
// Quake 2 game definition file (.fgd)
// for Worldcraft 1.6 and above
// last update: march 21 1998
//
// written by autolycus / autolycus@planetquake.com
// email me with improvements and suggestions
//
// special thanks to: Disruptor, Zoid, Zaphod, Imaginos,
// and EutecTic for comments, suggestions, and help!
//

// #######################################################################################################################
//										worldspawn
// #######################################################################################################################

@SolidClass = worldspawn : "World entity"
[
	message(string) : "Level name"
	nextmap(string) : "Next map (DM only)"
	sky(string) : "Environment map name"
	skyaxis(string) : "Vector axis for rotating sky"
	skyrotate(string) : "Speed of rotation (degrees/second)"
	sounds(integer) : "CD Track Number" : 1
	gravity(integer) : "Gravity" : 800
]

//
// base marker definitions
//

@baseclass = Appearflags [
	spawnflags(Flags) =
	[
		256 : "Not in Easy" : 0
		512 : "Not in Normal" : 0
		1024 : "Not in Hard" : 0
		2048 : "Not in Deathmatch" : 0
	]
]

@baseclass = Targetname [ targetname(target_source) : "Name" ]
@baseclass = Target [ target(target_destination) : "Target" ]

//
// player start, deathmatch, coop, deathmatch intermission
//

@baseclass base(Appearflags, Targetname) size(-16 -16 -24, 16 16 32) color(0 
255 0) = PlayerClass []

@PointClass base(PlayerClass) = info_player_start : "Player 1 start" []
@PointClass base(PlayerClass) = info_player_deathmatch : "Player deathmatch start" []
@PointClass base(PlayerClass) = info_player_coop : "Player cooperative start" []
@PointClass base(PlayerClass) = info_player_intermission : "Deathmatch intermission point"
[
	angles(string) : "pitch yaw roll"
]


// Notes on the 'team' key: First of all, it's really only useful in DM because it creates a random respawn pattern. Let's
// say that in one spot, you want to have the shotgun, Quad damage and mega health item to respawn in alternance. Place
// all of them in approximately the same location, team them and voila! The FIRST item that you place in the map will be
// the team MASTER - the others will be SLAVES. In DM play, the Master will be the first one to spawn. Once the Master is
// picked up, the respawn pattern becomes RANDOM: it could be the same or one of the other 2. If you try to use this in a
// Single Player map, it's pretty useless because only the team MASTER spawns and the others never appear obviously.
@BaseClass base(Appearflags, Target) color(76 76 255) size(-16 -16 -16, 16 16 16) = Ammo
[
	team(string) : "Team"
]


// #######################################################################################################################
//									FUNC_ section
// #######################################################################################################################


// ############################## FUNC_AREAPORTAL
@SolidClass base(Appearflags, Targetname) = func_areaportal : "Area portal (Vis blocker)" []


// ############################## FUNC_BUTTON
// 0221 - added "pathtarget", changed "sounds" information, added a "killtarget" key
@SolidClass base(Appearflags, Target, Targetname) color(0 128 204) = func_button : "Button"
[
	killtarget(string) : "Kill Target"
	pathtarget(string) : "Elevator Level Target"
	speed(integer) : "Speed" : 40
	wait(choices) : "Wait before reset" : 1 =
	[
		-1 : "Never Return"
	]
	lip(integer) : "Lip remaining after move" : 4
	health(integer) : "Health (shootable)"
	sounds(choices) : "Sounds" : 0 =
	[
		0 : "Silent"
		1 : "Button 1"
		2 : "Button 2"
	]
	message(string) : "Activation message"
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_CLOCK
@PointClass base(Appearflags, Targetname) color(0 0 255) size(-8 -8 -8, 8 8 8) = func_clock : "Clock"
[
	spawnflags(Flags) =
	[
		1 : "Timer Up" : 0
		2 : "Timer Down" : 0
		4 : "Start Off" : 0
		8 : "Multi Use" : 0
	]
	count(integer) : "Clock Count"
	pathtarget(string) : "Target"
	style(choices) : "Style" : 0 =
	[
		0 : "xx"
		1 : "xx:xx"
		2 : "xx:xx:xx"
	]
]

// ############################## FUNC_CONVEYOR
// func_conveyor code is incomplete.  use the surface attribute "flowing" and the "current" content flag
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_conveyor : "Conveyor belt"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
		2 : "Toggle" : 0
	]
	speed(integer) : "Speed" : 100
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_DOOR
// 0221 - updated "sounds" information
@SolidClass base(Appearflags, Targetname, Target) color(0 128 204) = func_door : "Door"
[
	spawnflags(Flags) =
	[
		1 : "Start Open" : 0
		4 : "Crusher" : 0
		8 : "No Monsters" : 0
		16 : "Animated" : 0
		32 : "Toggle" : 0
		64 : "Animated Fast" : 0
	]
	killtarget(string) : "Kill Target"
	team(string) : "Team"
	message(string) : "Trigger message"
	health(integer) : "Health (shootable)"
	speed(integer) : "Speed" : 100
	wait(choices) : "Wait before close" : 3 =
	[
		-1 : "Stay open"
	]
	lip(integer) : "Lip remaining after move" : 8
	dmg(integer) : "Damage when blocked" : 2
	sounds(choices) : "Sounds" : 0 =
	[
		0 : "Silent"
		1 : "Door 1"
		2 : "Door 2"
		3 : "Door 3"
		4 : "Door 4"
		5 : "Door 5"
	]
	_minlight(integer) : "Minimum light (optional)"
	main(integer) : "Main"
	minor(integer) : "Minor"
	inventory(string) : "Inventory"
	target_gsm(string) : "target_GSM"
]


// ############################## FUNC_DOOR_ROTATING
// 0221 - updated "sounds" info, removed "lip" key
@SolidClass base(Appearflags, Targetname, Target) color(0 128 204) = func_door_rotating : "Rotating Door"
[
	spawnflags(Flags) =
	[
		1 : "Start Open" : 0
		2 : "Reverse" : 0
		4 : "Crusher" : 0
		8 : "No Monsters" : 0
		16 : "Animated" : 0
		32 : "Toggle" : 0
		64 : "X Axis" : 0
		128 : "Y Axis" : 0
	]
	killtarget(string) : "Kill Target"
	team(string) : "Team"
	distance(integer) : "Degrees of rotation" : 90
	message(string) : "Trigger message"
	health(integer) : "Health (shootable)"
	speed(integer) : "Speed" : 100
	wait(choices) : "Wait before close" : 3 =
	[
		-1 : "Stay open"
	]
	dmg(integer) : "Damage when blocked" : 2
	sounds(choices) : "Sounds" : 0 =
	[
		0 : "Silent"
		1 : "Door 1"
		2 : "Door 2"
		3 : "Door 3"
		4 : "Door 4"
		5 : "Door 5"
	]
	_minlight(integer) : "Minimum light (optional)"
	main(integer) : "Main"
	minor(integer) : "Minor"
	inventory(string) : "Inventory"
]


// ############################## FUNC_DOOR_SECRET
// 0221 - added "_minlight" key (even tho you dont want it to stand out), added "message" key, removed "team" key
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_door_secret : "Secret Door"
[
	spawnflags(Flags) =
	[
		1 : "Always shoot" : 0
		2 : "1st Left" : 0
		4 : "1st Down" : 0
	]
	dmg(integer) : "Damage when blocked" : 2
	wait(choices) : "Wait before close" : 5 =
	[
		-1 : "Stay open"
	]
	message(string) : "Message"
	_minlight(integer) : "Minimum light (optional)"
	sounds(choices) : "Sounds" : 0 =
	[
		0 : "Silent"
		1 : "Door 1"
		2 : "Door 2"
		3 : "Door 3"
		4 : "Door 4"
		5 : "Door 5"
	]
	main(integer) : "Main"
	minor(integer) : "Minor"
]


// ############################## FUNC_EXPLOSIVE
@SolidClass base(Appearflags, Targetname, Target) color(0 128 204) = func_explosive : "Exploding/Breakable brush"
[
	spawnflags(Flags) =
	[
		1 : "Trigger Spawn" : 0
		2 : "Animated" : 0
		4 : "Animated Fast" : 0
	]
	health(integer) : "Health" : 100
	mass(integer) : "Mass (debris)" : 75
	dmg(integer) : "Damage" : 0
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_DIG
@SolidClass base(Appearflags, Targetname, Target) color (0 128 204) = func_dig : "Diggable brush"
[
	dmg(integer) : "Damage" : 0
	message(string) : "Message"
	target_gsm(string) : "target_gsm"
	spawnflags(Flags) =
	[
		1 : "Break Shovel" : 0
	]

]


// ############################## FUNC_KILLBOX
@SolidClass base(Appearflags, Targetname) color(255 0 0) = func_killbox : "Instant death" []


// ############################## FUNC_OBJECT
@SolidClass base(Appearflags, Targetname) color (0 128 204) = func_object : "Solid bmodel, will fall if its support is removed"
[
	spawnflags(Flags) =
	[
		1 : "Trigger Spawn" : 0
		2 : "Animated" : 0
		4 : "Animated Fast" : 0
	]
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_PLAT
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_plat : "Platform"
[
	spawnflags(Flags) =
	[
		1 : "Plat Low Trigger" : 0
		2 : "Fire Target Once":0
		4 : "Only Up/Down":0
		8 : "Return ASAP":0
	]
	speed(integer) : "Speed" : 100
	accel(integer) : "Acceleration" : 500
	lip(integer) : "Lip remaining after move" : 8
	height(integer) : "Movement distance"
	_minlight(integer) : "Minimum light (optional)"
	sounds(choices) : "Sounds" : 0=
	[
		0 : "silent"
		1 : "wood"
		2 : "metal"
	]
]


// ############################## FUNC_ROTATING
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_rotating : "Rotating brush"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
		2 : "Reverse" : 0
		4 : "X Axis" : 0
		8 : "Y Axis" : 0
		16 : "Pain on Touch" : 0
		32 : "Block Stops" : 0
		64 : "Animated" : 0
		128 : "Animated Fast" : 0
	]
	team(string) : "Team"
	speed(integer) : "Speed" : 100
	dmg(integer) : "Damage when blocked" : 2
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_TIMER
@PointClass base(Appearflags, Targetname, Target) color(76 25 153) size(-8 -8 -8, 8 8 8) = func_timer : "Timer"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
	]
	wait(integer) : "Base wait time" : 1
	random(integer) : "Wait variance (+/-)"
	delay(integer) : "Delay before first firing"
	pausetime(integer) : "Additional delay"
]


// ############################## FUNC_TRAIN
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_train : "Moving platform"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
		2 : "Toggle" : 0
		4 : "Block Stops" : 0
	]
	target(string) : "First stop target"
	team(string) : "Team"
	speed(integer) : "Speed" : 100
	dmg(integer) : "Damage when blocked" : 2
	noise(string) : "Sound (path/file.wav)"
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_WALL
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_wall : "Solid Wall"
[
	spawnflags(Flags) =
	[
		1 : "Trigger Spawn" : 0
		2 : "Toggle" : 0
		4 : "Start On" : 0
		8 : "Animated" : 0
		16 : "Animated Fast" : 0
	]
	_minlight(integer) : "Minimum light (optional)"
]


// ############################## FUNC_DOOR_ROTATING
// must never be transparent?
@SolidClass base(Appearflags, Targetname) color(0 128 204) = func_water : "Moveable water"
[
	spawnflags(Flags) =
	[
		1 : "Start Open" : 0
		2 : "Purified" : 0
	]
	speed(integer) : "Speed" : 25
	wait(choices) : "Wait before return" : -1 =
	[
		-1 : "Toggle"
	]
	lip(integer) : "Lip remaining after move"
	sounds(Choices) : "Sounds" : 1 =
	[
		0 : "No Sounds"
		1 : "Water"
		2 : "Lava"
	]
	team(string) : "Team"
	_minlight(integer) : "Minimum light (optional)"
]


// #######################################################################################################################
//									NULL & LIGHT section
// #######################################################################################################################


@PointClass base(Appearflags, Targetname) color(0 128 0) size(-4 -4 -4, 4 4 4) = info_null : "Spotlight target" []
@PointClass base(info_null) = info_notnull : "Lightning target" []
@BaseClass base(Appearflags, Target) color(76 76 255) size(-16 -16 -16, 16 16 16) = Items
[
	team(string) : "Team"
]
@BaseClass base(Appearflags, Target) color(0 128 204) size(-16 -16 -16, 16 16 16) = Keys []

@PointClass base(Appearflags, Target, Targetname) color(0 255 0) size(-8 -8 -8, 8 8 8) = light : "Light"
[
	spawnflags(Flags) =
	[
		1 : "Start Off" : 0
	]
	light(integer) : "Brightness" : 300
	_color(color1) : "RGB Color"
	_fade(integer) : "Fade"
	_angfade(integer) : "AngFade"
	style(Choices) : "Style" : 0 =
	[
		0 : "Normal"
		1 : "Flicker #1"
		6 : "Flicker #2"
		2 : "Slow Strong Pulse"
		3 : "Candle #1"
		7 : "Candle #2"
		8 : "Candle #3"
		4 : "Fast Strobe"
		5 : "Gentle Pulse #1"
		9 : "Slow Strobe"
		10 : "Fluorescent Flicker"
		11 : "Slow pulse, no black"
	]
	_cone(integer) : "Size of light (spotlight)" : 10
]


// #######################################################################################################################
//									MISC_ section
// #######################################################################################################################


// actor code is still broken...leaving this in because i know *someone* will fix this because it's pretty damn cool.
@PointClass base(PlayerClass, Target) = misc_actor : "Actor"
[
	health(integer) : "Health" : 100
]


@PointClass base(Appearflags, Targetname) = target_actor : "Actor path"
[
	spawnflags(Flags) =
	[
		1 : "Jump" : 0
		2 : "Shoot" : 0
		4 : "Attack" : 0
		16 : "Hold" : 0
		32 : "Brutal" : 0
	]
	target(string) : "Next path target"
	pathtarget(string) : "Action target"
	wait(integer) : "Pause time"
	message(string) : "Message"
	speed(integer) : "Forward (jump)" : 200
	height(integer) : "Height (jump)" : 200
]


// place teleporter units 10 units into a brush to get rid of teleport pad
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-32 -32 -24, 32 32 -16) = misc_teleporter : "Teleporter"
[
	target(string) : "Teleport Destination"
]


@PointClass base(Appearflags, Targetname) color(255 0 0) size(-32 -32 -24, 32 32 -16) = misc_teleporter_dest : "Teleport Destination" []


// 0221 - added "deathtarget", "killtarget", and "combattarget" keys
@BaseClass base(Appearflags, Target, Targetname) color(255 128 0) size(-16 -16 -24, 16 16 32) = Monsters
[
	spawnflags(Flags) =
	[
		1 : "Ambush" : 0
		2 : "Trigger Spawn" : 0
		4 : "Sight" : 0
	]
	combattarget(string) : "Point combat target"
	deathtarget(string) : "Entity to trigger at death"
	killtarget(string) : "Entity to remove at death"
	item(string) : "Spawn Item"
	inventory(string) : "Inventory"
]

// using a "wait" value of -1 on a path corner causes a func_train to go silent between itself and the next path corner
// when the train is restarted. The train's sound will resume as soon as it reaches a path corner with a "wait" value
// other than -1
@PointClass base(Appearflags, Targetname) color(128 76 0) size(-8 -8 -8, 8 8 8) = path_corner : "Path corner"
[
	spawnflags(Flags) =
	[
		1 : "Teleport" : 0
	]
	target(string) : "Next path target"
	pathtarget(string) : "Event to trigger"
	wait(choices) : "Wait" : 0 =
	[
		-1 : "Wait for retrigger"
	]
	moodname(string) : "Mood"
	moodtime(integer) : "Mood Time":0
]


@PointClass base(Appearflags, Targetname) color(128 76 0) size(-8 -8 -8, 8 8 8) = point_flee : "Point Flee"
[
	spawnflags(Flags) =
	[
		1 : "Teleport" : 0
	]
	target(string) : "Next path target"
	pathtarget(string) : "Event to trigger"
	wait(choices) : "Wait" : 0 =
	[
		-1 : "Wait for retrigger"
	]
	moodname(string) : "Mood"
	moodtime(integer) : "Mood Time":0
]


// "target" doesn't work (for now)...a separate trigger is needed
@PointClass base(Appearflags, Targetname, Target) color(128 76 9) size(-8 -8 -8, 8 8 8) = point_combat : "1st point of combat"
[
	spawnflags(Flags) =
	[
		1 : "Hold" : 0
	]
	moodname(string) : "Mood"
	moodtime(integer) : "Mood Time":0
]


// #######################################################################################################################
//									TARGET_ section
// #######################################################################################################################


// ############################## TARGET_BLASTER
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_blaster : "Blaster"
[
	spawnflags(Flags) =
	[
		1 : "No Trail" : 0
		2 : "No Effects" : 0
	]
	dmg(integer) : "Damage" : 15
	speed(integer) : "Speed" : 1000
]


// ############################## TARGET_CHANGELEVEL
// set "map" value to "mapname$playername" where playername equals the targetname of a corresponding info_player_start in
// the next map.  To play a cinematic before starting the level, the "map" value should be
// "cinemeatic.cin+mapname$playername". Note that a playername is not required if the corresponding info_player_start
// doesn't have a targetname.  If you want this to be designated as the last level of a unit, place an asterix (*) before
// the map name.
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_changelevel : "Change level"
[
	map(string) : "Next map"
]


// ############################## TARGET_CHARACTER
@SolidClass base(Appearflags, Targetname) color(0 0 255) = target_character : "Use with target_string and func_clock"
[
	team(string) : "Team"
	count(integer) : "Position in the string"
	_minlight(string) : "Minimum light (optional)"
]


// ############################## TARGET_CROSSLEVEL_TRIGGER
@PointClass base(Appearflags, Targetname, Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = target_crosslevel_trigger : "Cross-level trigger"
[
	spawnflags(Flags) =
	[
		1 : "Trigger 1" : 0
		2 : "Trigger 2" : 0
		4 : "Trigger 3" : 0
		8 : "Trigger 4" : 0
		16 : "Trigger 5" : 0
		32 : "Trigger 6" : 0
		64 : "Trigger 7" : 0
		128 : "Trigger 8" : 0
	]
	killtarget(string) : "Kill Target"
	message(string) : "Message"
	delay(integer) : "Trigger delay"
]


// ############################## TARGET_CROSSLEVEL_TARGET
@PointClass base(Appearflags, Targetname, Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = target_crosslevel_target : "Cross-level trigger"
[
	spawnflags(Flags) =
	[
		1 : "Trigger 1" : 0
		2 : "Trigger 2" : 0
		4 : "Trigger 3" : 0
		8 : "Trigger 4" : 0
		16 : "Trigger 5" : 0
		32 : "Trigger 6" : 0
		64 : "Trigger 7" : 0
		128 : "Trigger 8" : 0
	]
	killtarget(string) : "Kill Target"
	delay(integer) : "Trigger delay (if activated)" : 1
]


// ############################## TARGET_DEBRIS
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_debris : "Target debris"
[
	spawnflags(Flags)=
	[
		1 : "Triggering" : 0
		2 : "Once" : 0
		4 : "Start On" : 0
		8 : "Only Small" : 0
		16 : "Only Big" : 0
	]
	mass(integer) : "Mass" : 75
	wait(integer) : "Wait" : 0
	speed(integer) : "Speed" : 150
	target(string) : "Target"
	dmg(integer) : "Damage" : 0
]


// ############################## TARGET_EARTHQUAKE
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_earthquake : "Level wide earthquake"
[
	speed(integer) : "Severity of quake" : 200
	count(integer) : "Duration" : 5
]


// ############################## TARGET_EXPLOSION
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_explosion : "Explosion"
[
	delay(integer) : "Delay before explosion"
	dmg(integer) : "Radius damage" : 0
]


// ############################## TARGET_GOAL
@PointClass base(Appearflags, Targetname) color(255 0 255) size(-8 -8 -8, 8 8 8) = target_goal : "Counts a goal completed" []


// ############################## TARGET_HELP
@PointClass base(Appearflags, Targetname) color(255 0 255) size(-8 -8 -8, 8 8 8) = target_help : "Computer help message"
[
	spawnflags(Flags) =
	[
		1 : "Main Objective" : 0
	]
	message(string) : "Computer message"
]


// ############################## TARGET_INTERACTION
@PointClass base(Appearflags, Targetname) color(255 0 255) size(-8 -8 -8, 8 8 8) = target_interaction : "Spawn conversation session"
[
	name(string) : "Conversation window title"
	datafile(string) : "Text filename"
	camtype(Choices) : "Type" : 0=
	[
		0:"None"
		2:"Static"
		3:"Conversation"
	]
	target(string) : "Target"
	spawnflags(Flags)=
	[
		2 : "Info Icon" : 0
	]
]


// ############################## TARGET_LASER
// if no color spawnflags are set, the laser color defaults to dim gray (and hard to see) setting the damage to 0 makes it
// use the default damage of 1 setting the damage to a negative number will actually give health
@PointClass base(Appearflags, Targetname, Target) color(0 128 204) size(-8 -8 -8, 8 8 8) = target_laser : "Laser"
[
	spawnflags(Flags) =
	[
		1 : "Start On" : 0
		2 : "Red" : 0
		4 : "Green" : 0
		8 : "Blue" : 0
		16 : "Yellow" : 0
		32 : "Orange" : 0
		64 : "Fat" : 0
	]
	dmg(integer) : "Damage"
]


// ############################## TARGET_LIGHTRAMP
@PointClass base(Appearflags, Targetname, Target) color(0 128 204) size(-8 -8 -8, 8 8 8) = target_lightramp : "Light ramp"
[
	spawnflags(Flags) =
	[
		1 : "Toggle" : 0
	]
	speed(integer) : "Speed"
	message(string) : "start/end light level"
]


// ############################## TARGET_SECRET
@PointClass base(Appearflags, Targetname) color(255 0 255) size(-8 -8 -8, 8 8 8) = target_secret : "Counts a secret found"
[
	message(string) : "Message to print" : "You have found a secret."
]


// ############################## TARGET_SPAWNER
// set speed and angle, otherwise spawned object drops
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_spawner : "Monster/Item spawner"
[
	target(string) : "Monster/Item to spawn"
	speed(integer) : "Speed"
]


// ############################## TARGET_SPEAKER
// looped sounds are automatically volume 1, attenuation 3 :\
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_speaker : "Sound player"
[
	spawnflags(Flags) =
	[
		1 : "Looped On" : 0
		2 : "Looped Off" : 0
		4 : "Reliable" : 0
	]
	noise(string) : "Sound (path/file.wav)"
	attenuation(Choices) : "Attenuation" : 1 =
	[
		-1 : "None, send to whole level"
		1 : "Normal fighting sounds"
		2 : "Idle sound level"
		3 : "Ambient sound level"
	]
	volume(integer) : "Volume (0.0 - 1.0)" : 1
]


// ############################## TARGET_SPLASH
// "sounds" values other than 1 are silent.  leaving in the other options for availability to mods/fixes
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_splash : "Creates a splash when used"
[
	sounds(choices) : "Type of splash" : 2 =
	[
		1 : "Sparks"
		2 : "Blue water"
		3 : "Brown water"
		4 : "Slime"
		5 : "Lava"
		6 : "Blood"
	]
	count(integer) : "Number of pixels in splash (1 - 255)"
	dmg(integer) : "Radius damage"
]


// ############################## TARGET_STRING
@PointClass base(Appearflags, Targetname) color(0 0 255) size(-8 -8 -8, 8 8 8) = target_string : "String"
[
	team(string) : "Team"
]


// ############################## TARGET_TEMP_ENTITY
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = target_temp_entity : "Temp entity"
[
	style(choices) : "Style" : 22 =
	[
		20 : "Green Fireball"
		21 : "Particles #1"
		22 : "Particles #2"
	]
]


// ############################## TARGET_GSM
@PointClass base(Appearflags, Target, Targetname) color(100 200 50) size(-8 -8 -8, 8 8 8) = target_gsm : "Target GSM"
[
	main(integer) : "Main GSM"
	minor(integer) : "Minor GSM"
	moodname(string) : "Mood Name"
	moodtime(integer) : "Mood Time"
	spawnflags(Flags) =
	[
		1 : "GSM_Spawn" : 0
		2 : "GSM_Free" : 0
		4 : "GSM_Kill" : 0
		8 : "GSM_Lock" : 0
		16 : "GSM_Unlock" : 0
		32 : "GSM_Use" : 0
		64 : "GSM_Use_Set" : 0
		128 : "GSM_Lock_Set" : 0
		8192 : "GSM_Free_Set" : 0
		16384 : "GSM_Release" : 0
		32768 : "GSM_Multiple" : 0
	]
]

// #######################################################################################################################
// 									TRAP_ARROW
// #######################################################################################################################

@SolidClass base(Appearflags, Targetname) color(0 128 225) = trap_arrow : "Arrow Trap"
[
	target(string) : "Start position"
	health(integer) : "Health"
	spawnflags(Flags)=
	[
		1 : "Flaming Arrow" : 0
		2 : "Bolt" : 0
		4 : "Explosive Bolt" : 0
	]
]


// #######################################################################################################################
//									TRIGGER_ section
// #######################################################################################################################


// ############################## TRIGGER_ALWAYS
@PointClass base(Appearflags, Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = trigger_always : "Always triggers"
[
	killtarget(string) : "Kill Target"
	delay(integer) : "Time before triggering"
]


// ############################## TRIGGER_COUNTER
@PointClass base(Appearflags, Targetname, Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = trigger_counter : "Counter"
[
	spawnflags(Flags) =
	[
		1 : "No Message" : 0
		16 : "Enable Alert" : 0
	]
	killtarget(string) : "Kill Target"
	count(integer) : "Count before trigger" : 2
]


// ############################## TRIGGER_ELEVATOR
@PointClass base(Appearflags, Targetname, Target) color(76 25 153) = trigger_elevator : "Elevator trigger" []


// ############################## TRIGGER_GRAVITY
@SolidClass base(Appearflags) color(128 128 128) = trigger_gravity : "Change gravity"
[
	gravity(integer) : "Gravity (standard = 1.0)" : 1
]


// ############################## TRIGGER_HURT
@SolidClass base(Appearflags, Targetname) color(128 128 128) = trigger_hurt : "Hurts on touch"
[
	spawnflags(Flags) =
	[
		1 : "Start Off" : 0
		2 : "Toggle" : 0
		4 : "Silent" : 0
		8 : "No Protection" : 0
		16 : "Slow hurt" : 0
	]
	dmg(integer) : "Damage" : 5
]


// ############################## TRIGGER_KEY
@PointClass base(Appearflags, Targetname, Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = trigger_key : "Triggers with key"
[
	killtarget(string) : "Kill target"
	item(string) : "Item classname" : "key_blue_key"
]


// ############################## TRIGGER_MONSTERJUMP
@SolidClass base(Appearflags) color(128 128 128) = trigger_monsterjump : "Makes monsters jump"
[
	speed(integer) : "Speed thrown forward" : 200
	height(integer) : "Height thrown upward" : 200
]


// ############################## TRIGGER_RELAY
// 0221 - switched around _relay, _once, and _multiple
@PointClass base(Appearflags, Targetname, Target) color(128 128 128) = trigger_relay : "Relay trigger"
[
	spawnflags(Flags)=
	[
		16 : "Enable Alert" : 0
	]
	killtarget(string) : "Kill Target"
	delay(integer) : "Time before triggering"
	message(string) : "Trigger message"
	moodname(string) : "Mood Name"
	moodtime(integer) : "Mood Time"
	lastmoodname(string) : "Last moodname"
	lastmoodtime(integer) : "Last moodtime"
	alert_mood(string) : "Alert mood"
	alert_time(string) : "Alert time"
	target_gsm(string) : "Target_GSM"
	main(integer) : "Main GSM"
	minor(integer) : "Minor GSM"
]


// ############################## TRIGGER_ONCE
@SolidClass base(trigger_relay) = trigger_once : "Single fire trigger"
[
	spawnflags(Flags) =
	[
		4 : "Triggered" : 0
		16 : "Enable Alert" : 0
	]
	sounds(choices) : "Sounds" : 0 =
	[
		0 : "Beep beep"
		1 : "Secret"
		2 : "F1 prompt"
		3 : "Silent"
	]
]


// ############################## TRIGGER_MULTIPLE
@SolidClass base(trigger_once) = trigger_multiple : "Multiple fire trigger"
[
	spawnflags(Flags) =
	[
		1 : "Monster" : 0
		2 : "Not Player" : 0
		8 : "Once Per Touch" : 0
		16 : "Enable Alert" : 0
	]
	wait(integer) : "Seconds between triggers" : 0
	sounds(choices) : "Sounds" : 0=
	[
		1 : "Secret"
		2 : "Beep Beep"
		4 : "Large switch"
	]
]


// ############################## TRIGGER_PUSH
@SolidClass base(Appearflags) color(128 128 128) = trigger_push : "Push trigger"
[
	spawnflags(Flags) =
	[
		1 : "Push Once" : 0
	]
	speed(integer) : "Speed of push" : 1000
]


// ############################## TRIGGER_GSM
@PointClass base(Appearflags) color(128 128 128) = trigger_GSM : "GSM Trigger"
[
	main(integer) : "Main"
	minor(integer) : "Minor"
]


// #######################################################################################################################
//									CAM_ section
// #######################################################################################################################


@SolidClass base(Appearflags,Target) color(128 128 128) = trigger_cam : "Cam trigger" []
@PointClass base(Appearflags,Targetname,Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = cam_position : "Cam Position" []
@PointClass base(Appearflags,Targetname,Target) color(128 128 128) size(-8 -8 -8, 8 8 8) = cam_aim : "Cam Aim" []


// #######################################################################################################################
//									TURRET_ section
// #######################################################################################################################


@SolidClass base(Appearflags, Targetname, Target) color(128 255 128) = turret_breach : "Turret breach"
[
	speed(integer) : "Speed" : 50
	dmg(integer) : "Damage" : 10
	minpitch(integer) : "Miminum pitch angle" : -30
	maxpitch(integer) : "Maximum pitch angle" : 30
	minyaw(integer) : "Minimum yaw angle" : 0
	maxyaw(integer) : "Maximum yaw angle" : 360
	team(string) : "Team"
	_minlight(string) : "Minimum light (optional)"
]


@SolidClass base(Appearflags) color(128 255 128) = turret_base : "Turret base"
[
	team(string) : "Team"
	_minlight(string) : "Minimum light (optional)"
]


@PointClass base(Appearflags) color(128 255 128) size(-16 -16 -24, 16 16 32) = turret_driver : "Turret driver"
[
	target(string) : "Target (turret_breach)"
]


@PointClass base(Appearflags) color(0 128 204) size(-8 -8 -8, 8 8 8) = viewthing : "Just for debugging level - dont use" []


// #######################################################################################################################
//									WEAPONS_ section
// #######################################################################################################################


@BaseClass base(Appearflags, Target) color(76 76 255) size(-16 -16 -16, 16 16 16) = Weapons []

@PointClass base(Ammo) = ammo_arrows : "Arrows Ammo" []
@PointClass base(Ammo) = ammo_farrows : "Fire Arrows" []
@PointClass base(Ammo) = ammo_bolts : "Bolts Ammo" []
@PointClass base(Ammo) = ammo_ebolts : "Explosive Bolts" []
@PointClass base(Ammo) = ammo_dballs: "Dragon Balls Ammo" []


// #######################################################################################################################
//									DAWN OF DARKNESS ENTITIES
// #######################################################################################################################


// ############################## EFFECT_SPIRTING
@PointClass base(Appearflags, Target) color (255 255 0) size(-8 -8 -8, 8 8 8) = effect_spirting : "Effects Spirting"
[
	density(integer): "Density" : 32
	target(string) : "Target info_null"
	style(Choices) : "Style":1=
	[
		1 : "Sparks"
		2 : "Blue water"
		3 : "Brown water"
		4 : "Slime"
		5 : "Lava"
		6 : "Blood"
	]
]


// ############################## EFFECT_RIPPLE
@PointClass base(Appearflags, Target) color (255 255 0) size(-8 -8 -8, 8 8 8) = effect_ripple : "Effects Ripple" []


// ############################## ITEMS & OBJECTS
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -6 -2, 4 6 2) = item_book1 : "Book"
[
	book(integer):"Index":0
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-2 -2 -6, 2 2 6) = item_bottle1 : "Bottle" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-8 -8 -5, 8 8 5) = item_bowl : "Bowl" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -6 -4, 4 6 4) = item_bread : "Bread" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-10 -2 -8, 10 2 8) = item_hammer : "Hammer" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-10 -4 -4, 10 4 4) = item_lamp : "Lamp" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-6 -6 -6, 6 6 6) = item_sack : "Sack" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-6 -6 -18, 6 6 18) = item_shovel : "Shovel" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-6 -6 -8, 6 6 8) = item_vase1 : "Vase" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-6 -6 -8, 6 6 8) = item_pickaxe : "Pickaxe" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_w_flask : "Water Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_p_flask : "Poison Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_o_flask : "Oil Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_b_flask : "Bile Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_r_flask : "Rejuvination Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_h_flask : "Health Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_bl_flask : "Blur Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_q_flask : "Quickness Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_a_flask : "Agility Flask" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -4 -6, 4 4 6) = item_torch : "Torch" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-16 -16 -16, 16 16 16) = item_leather : "Leather Armor" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-16 -16 -16, 16 16 16) = item_scalemail : "Scalemail Armor" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-16 -16 -16, 16 16 16) = item_armor : "Ancestral Armor" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-2 -2 -4, 2 2 4) = key_metal : "Metal Key" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-2 -2 -4, 2 2 4) = key_silver : "Silver Key" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-2 -2 -4, 2 2 4) = key_gold : "Gold Key" []
@PointClass base(Appearflags, Targetname) color(76 76 255) size(-2 -2 -4, 2 2 4) = key_glass : "Glass Key" []

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-4 -6 -2, 4 6 2) = quest_book : "Quest Book"
[
	main(integer) : "Main"
	minor(integer) : "Minor"
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-10 -10 -14, 10 10 14) = object_barrel : "Barrel"
[
	mass(integer) : "Mass":100
	health(integer) : "Health":30
	dmg(integer) : "Damage" : 150
	spawnflags(Flags)=
	[
		1 : "Moveable" : 0
		2 : "Exploding" : 0
	]
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-8 -11 -8, 8 11 8) = object_cauldron : "Cauldron"
[
	inventory(string) : "Inventory"
	message(string) : "Message"
	target_gsm(string) : "target_gsm"
	spawnflags(Flags) =
	[
		1 : "Trigger" : 0
		2 : "gsm_spawn" : 0
	]
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-10 -10 -5, 10 10 5) = object_campfire : "Campfire"
[
	sounds(Choices) : "Sounds" : 0 =
	[
		0 : "No Sound"
		1 : "Sound"
	]
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-20 -20 -20, 20 20 20) = object_cart : "Cart" []

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-7 -12 -7, 7 12 7) = object_chest1 : "Chest"
[
	target_gsm_name(string) : "Target GSM"
	inventory(string) : "Inventory"
	skinnum(Choices) : "Skin" : 0 =
	[
		0 : "1.skin"
		1 : "2.skin"
		2 : "3.skin"
		3 : "4.skin"
		4 : "5.skin"
		5 : "6.skin"
		6 : "7.skin"
		7 : "8.skin"
	]
	spawnflags(Flags)=
	[
		32768 : "Locked" : 0
	]
]

@PointClass base(Appearflags, Targetname) color(76 76 255) size(-20 -20 -30, 20 20 30) = object_cabinet : "Cabinet"
[
	inventory(string) : "Inventory"
	skin(Choices) : "Skin" : 0 =
	[
		0 : "1.skin"
		1 : "2.skin"
		2 : "3.skin"
		3 : "4.skin"
		4 : "5.skin"
		5 : "6.skin"
		6 : "7.skin"
		7 : "8.skin"
	]
]

@PointClass base(Appearflags, Targetname) color(255 255 0) size(-20 -4 -8, 20 4 8) = object_flag : "Flag" []

@PointClass base(Appearflags, Targetname) color(255 255 0) size(-3 -3 -6, 3 3 11) = object_flame1 : "Flame"
[
	sounds(Choices) : "Sounds" : 0 =
	[
		0 : "No Sound"
		1 : "Torch"
		2 : "Campfire"
	]
]

@PointClass base(Appearflags, Targetname) color(255 255 0) size(-2 -3 -6, 2 4 6) = object_torch : "Torch"
[
	sounds(Choices) : "Sounds" : 0 =
	[
		0 : "No Sound"
		1 : "Sound"
	]
]

@BaseClass base(Appearflags,Targetname,Target) color(255 0 0) size(-16 -16 -24, 16 16 32) = Plants
[
	sounds(integer) : "Sounds"
]

@PointClass base(Plants) color(0 255 0) size(-6 -6 -47, 6 6 47) = plant_deadtree1 : "Dead Tree 1" []
@PointClass base(Plants) color(0 255 0) size(-6 -6 -40, 6 6 45) = plant_deadtree2 : "Dead Tree 2" []
@PointClass base(Plants) color(0 255 0) size(-8 -8 -78, 4 4 80) = plant_deadtree3 : "Dead Tree 3" []
@PointClass base(Plants) color(0 255 0) size(-8 -8 -80, 8 8 84) = plant_deadtree4 : "Dead Tree 4" []
@PointClass base(Plants) color(0 255 0) size(-12 -5 -14, 11 6 13) = plant_plant1 : "Plant 1" []
@PointClass base(Plants) color(0 255 0) size(-9 -9 -9, 9 9 9) = plant_plant2 : "Plant 2" []
@PointClass base(Plants) color(0 255 0) size(-19 -19 -1, 19 19 1) = plant_plant3 : "Plant 3" []
@PointClass base(Plants) color(0 255 0) size(-24 -14 -1, 24 14 1) = plant_plant4 : "Plant 4" []
@PointClass base(Plants) color(0 255 0) size(-1 -24 -12, 1 24 12) = plant_plant5 : "Plant 5" []
@PointClass base(Plants) color(0 255 0) size(-1 -8 -20, 1 8 20) = plant_plant6 : "Plant 6" []
@PointClass base(Plants) color(0 255 0) size(-20 -20 -12, 20 20 12) = plant_plant7 : "Plant 7" []
@PointClass base(Plants) color(0 255 0) size(-10 -20 -8, 10 20 8) = plant_plant8 : "Plant 8" []
@PointClass base(Plants) color(0 255 0) size(-17 -19 -27, 17 19 27) = plant_tallbush : "Tall Bush" []
@PointClass base(Plants) color(0 255 0) size(-17 -17 -15, 17 17 15) = plant_widebush : "Wide Bush" []
@PointClass base(Plants) color(0 255 0) size(-3 -3 -46, 10 10 44) = plant_tree1 : "Tree 1" []
@PointClass base(Plants) color(0 255 0) size(-10 -10 -94, 10 10 90) = plant_tree2 : "Tree 2" []

@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -8 -8, 8 8 8) = misc_npc_point : "NPC Point"
[
	target(string) : "Next NPC point"
	wait(integer) : "Wait"
	spawnflags(Flags)=
	[
		1 : "Walk" : 0
		2 : "Door" : 0
		4 : "Go back" : 0
	]
]

@PointClass base(Appearflags, Targetname) color(255 0 0) size(-10 -10 -9, 10 10 4) = object_big_fire : "Big Fire"
[
	sounds(Choices) : "Sounds" : 0 =
	[
		0 : "No Sound"
		1 : "Sound"
	]
]

@PointClass base(Appearflags, Targetname) color(255 0 0) size(-2 -4 -52, 2 4 52) = object_banner : "Banner" []
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-8 -50 -14, 8 50 4) = object_pennant : "Pennant" []
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-12 -12 -44, 12 12 44) = object_statue : "Statue" []
@PointClass base(Appearflags, Targetname) color(255 0 0) size(-22 -22 -35, 22 22 35) = object_throne : "Throne" []


// ############################## MONSTER
@BaseClass base(Appearflags,Targetname,Target) color(255 0 0) size(-16 -16 -24, 16 16 32) = Monster
[
	inventory(string) : "Inventory"
	team(string) : "Team"
	spawnflags(Flags)=
	[
		1 : "Ambush" : 0
		2 : "Trigger Spawn" : 0
		4 : "Sight" : 0
		8 : "Team Leader" : 0
		16 : "Init_Talk" : 0
		32 : "Fearless" : 0
		64 : "Attack" : 0
	]
	moodname(string) : "Mood"
	lastmoodname(string) : "Last Mood"
	alert_mood(string) : "Alert Mood"
	moodtime(integer) : "Mood Time" : 0
	attack_msg(string) : "Attack Message"
	aggression(integer) : "Aggression" : 1
	paranoia(integer) : "Paranoia" : 1
	morale(integer) : "Morale" : 1
	sight_range(integer) : "Sight Range (1-7)" : 0
	guard_distance(integer) : "Guard Distance" : 128
	health(integer) : "Health"
	armor(string) : "Armor"
	alert_target(string) : "Alert Target"
	deathtarget(string) : "Death Target"
	fleetarget(string) : "Flee Target"
	target_gsm(string) : "Target GSM"
]

@PointClass base(Monster) = monster_agath : "Agathodaemon" []
@PointClass base(Monster) = monster_apprentice : "Apprentice" []
@PointClass base(Monster) = monster_carnivean : "Carnivean" []
@PointClass base(Monster) = monster_outrider : "Outrider"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Default"
		1 : "Dirty, Outdoors"
		2 : "Available"
		3 : "Available"
	]
]
@PointClass base(Monster) = monster_wraith : "Wraith" []
@PointClass base(Monster) = monster_scout : "Scout"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Default"
		1 : "Red Guard"
		2 : "Dirty, Outdoors"
		3 : "Bloody"
	]
]
@PointClass base(Monster) = monster_hound : "Hound" []
@PointClass base(Monster) = monster_captain : "Captain" []
@PointClass base(Monster) = monster_crescent : "Crescent"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Default"
		1 : "Cannoneer"
		2 : "Pilot"
		3 : "Available"
	]
]
@PointClass base(Monster) = monster_dweller : "Dweller" []
@PointClass base(Monster) = monster_miner : "Miner" []
@PointClass base(Monster) = monster_necromancer : "Necromancer" []
@PointClass base(Monster) = monster_pilot : "Pilot" []
@PointClass base(Monster) = monster_sultan : "Sultan" []
@PointClass base(Monster) = monster_tormentor : "Tormentor" []
@PointClass base(Monster) = monster_tenebrion : "Tenebrion" []
@PointClass base(Monster) = monster_merc_sword : "Mercenary Sword"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Default"
		1 : "Light"
		2 : "Sergeant"
		3 : "Scout"
	]
]
@PointClass base(Monster) = monster_merc_axe : "Mercenary Axe"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Default"
		1 : "Sergeant"
		2 : "Plate"
		3 : "Available"
	]
]
@PointClass base(Monster) = monster_merc_xbow : "Mercenary Crossbow"
[
	skinnum(Choices):"Skin":0=
	[
		0 : "Default"
		1 : "Light"
		2 : "Plate"
		3 : "Plate Leader"
	]
]


// ############################## ANIMALS
@BaseClass base(Appearflags,Targetname,Target) color(255 128 0) size(-8 -8 -8, 8 8 8) = Animal
[
	moodname(string) : "Mood"
	moodtime(integer) : "Mood Time" : 0
]

@PointClass base(Animal) color(255 0 0) size(-8 -8 -8, 8 8 8) = animal_bird : "Bird" []
@PointClass base(Animal) color(255 0 0) size(-4 -8 -4, 4 8 4) = animal_fish : "Fish" []
@PointClass base(Animal) color(255 0 0) size(-8 -16 -12, 8 16 12) = animal_vulture : "Vulture" []
@PointClass base(Animal) color(255 0 0) size(-8 -16 -20, 8 16 0) = animal_camel : "Camel" []
@PointClass base(Animal) color(255 0 0) size(-8 -8 -8, 8 8 8) = animal_goat : "Goat" []


// ############################## CORPSE
@BaseClass base(Appearflags,Targetname,Target) color(255 128 128) = Corpse
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Mutilated"
		1 : "Burned"
		2 : "Mutilated"
		3 : "Mutilated"
		4 : "Extra mutilated"
		5 : "Totally burned"
		6 : "Rotting"
		7 : "Lucitanian soldier"
	]
]
@PointClass base(Corpse) size(-6 -6 -34, 6 6 27) = corpse_male1 : "Male Corpse 1" []
@PointClass base(Corpse) size(-18 -11 -30,16 3 -13) = corpse_male2 : "Male Corpse 2" []
@PointClass base(Corpse) size(-30 -10 -30,32 10 -12) = corpse_male3 : "Male Corpse 3" []
@PointClass base(Corpse) size(-19 -11 -30,17 11 0) = corpse_male4 : "Male Corpse 4" []
@PointClass base(Corpse) size(-27 -16 -29,26 11 -11) = corpse_male5 : "Male Corpse 5" []
@PointClass base(Corpse) size(-30 -14 -30,30 14 17) = corpse_male6 : "Male Corpse 6" []
@PointClass base(Corpse) size(-8 -12 -34,5 12 31) = corpse_male7 : "Male Corpse 7" []


// ############################## NPC'S
@BaseClass base(Appearflags,Targetname,Target) color(255 128 0) size(-12 -12 -24, 12 12 32) = Npc
[
	name(string) : "NPC Name"
	inventory(string) : "Inventory"
	spawnflags(Flags)=
	[
		16 : "Init_Talk" : 0
		32 : "Fearless" : 0
	]
	datafile(string) : "Datafile"
	skinnum(Choices) : "Skin" : 0 =
	[
		0 : "1.skin"
		1 : "2.skin"
		2 : "3.skin"
		3 : "4.skin"
		4 : "5.skin"
		5 : "6.skin"
		6 : "7.skin"
		7 : "8.skin"
	]
	moodname(string) : "Mood"
	moodtime(integer) : "Mood Time":0
]
@PointClass base(Npc) = npc_insvilgr : "NPC Insane Villager" []
@PointClass base(Npc) = npc_femvilgr : "NPC Female Villager"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Brown regular clothes"
		1 : "Reddish regular clothes"
		2 : "Witch (Adrianna)"
		3 : "Worn out clothes (Peasant)"
		4 : "Worn out clothes (Grey Peasant)"
		5 : "Baa'Chee Sister (Cheitan)"
		6 : "Shamash Sister (Lucitanian)"
		7 : "Available"
	]
]
@PointClass base(Npc) = npc_malvilgr : "NPC Male Villager"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Regular clothes (Villager)"
		1 : "Regular clothes (Villager)"
		2 : "Regular clothes (Villager)"
		3 : "Regular clothes (Villager)"
		4 : "Regular clothes (Villager)"
		5 : "Regular clothes (Villager)"
		6 : "Regular clothes (Old Villager)"
		7 : "Regular clothes (Poor Villager)"
	]
]
@PointClass base(Npc) = npc_boy : "NPC Boy"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Purple clothes, green waistcoat"
		1 : "Brown clothes, blue waistcoat"
		2 : "Green shirt, brown trousers"
		3 : "Orange shirt, brown trousers"
	]
]
@PointClass base(Npc) = npc_girl : "NPC Girl"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Fancy, brown"
		1 : "Poor, brown (Peasant)"
		2 : "Poor, red (Peasant)"
		3 : "Fancy, blue dress"
	]
]
@PointClass base(Npc) = npc_worker : "NPC Worker"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Villager"
		1 : "Cheitan worker"
		2 : "Villager (Old Man)"
		3 : "Cheitan worker (Bald Man)"
		4 : "Bloody Slave"
		5 : "Lucitanian Soldier"
		6 : "Fisherman"
		7 : "Seamus"
	]
]
@PointClass base(Npc) = npc_mslave : "NPC Male Slave"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Villager"
		1 : "Cheitan worker"
		2 : "Villager (Old Man)"
		3 : "Cheitan worker (Bald Man)"
		4 : "Bloody Slave"
		5 : "Lucitanian Soldier"
		6 : "Fisherman"
		7 : "Seamus"
	]
]
@PointClass base(Npc) = npc_fslave : "NPC Female Slave"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Slave"
		1 : "Darker"
		2 : "Naked Slave Girl"
		3 : "Villager"
		4 : "Villager"
		5 : "Villager"
		6 : "Poor villager/new slave"
		7 : "Slave"
	]
]
@PointClass base(Npc) = npc_moktosk : "NPC Moktar or Ratatosk"
[
	skinnum(Choices) : "Skin" : 0=
	[
		0 : "Moktar"
		1 : "Ratatosk"
	]
]

@BaseClass base(Appearflags,Targetname,Target) color(255 128 0) size(-16 -16 -16,16 16 16) = Weapon []

@PointClass base(Weapon) = weapon_3gun : "Triple Flintlock" []
@PointClass base(Weapon) = weapon_bow : "Bow" []
@PointClass base(Weapon) = weapon_rifle : "Blunderbuss" []
@PointClass base(Weapon) = weapon_sword : "Ancestral Sword" []
@PointClass base(Weapon) = weapon_xbow : "Crossbow" []
